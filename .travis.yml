# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
sudo: required
language: rust
services: docker

env:
  global:
    - CRATE_NAME=pbar

matrix:
  include:
  # Linux
  #  - env: TARGET=aarch64-unknown-linux-gnu
  #  - env: TARGET=arm-unknown-linux-gnueabi
  #  - env: TARGET=armv7-unknown-linux-gnueabihf
  #  - env: TARGET=i686-unknown-linux-gnu
  #  - env: TARGET=i686-unknown-linux-musl
  #  - env: TARGET=mips-unknown-linux-gnu
  #  - env: TARGET=mips64-unknown-linux-gnuabi64
  #  - env: TARGET=mips64el-unknown-linux-gnuabi64
  #  - env: TARGET=mipsel-unknown-linux-gnu
  #  - env: TARGET=powerpc-unknown-linux-gnu
  #  - env: TARGET=powerpc64-unknown-linux-gnu
  #  - env: TARGET=powerpc64le-unknown-linux-gnu
  #  - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
  - env: TARGET=x86_64-unknown-linux-gnu
  #  - env: TARGET=x86_64-unknown-linux-musl

  # OSX
  #  - env: TARGET=i686-apple-darwin
  #    os: osx
  - env: TARGET=x86_64-apple-darwin
    os: osx

  # Testing other channels
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: nightly
  - env: TARGET=x86_64-apple-darwin
    os: osx
    rust: nightly

before_script:
  - export PATH=$HOME/.cargo/bin:$PATH

script:
  - cargo test --target $TARGET &&
  - cargo run --target $TARGET --example simple &&
  - cargo run --target $TARGET --example multiple &&
  - cargo run --target $TARGET --example year_progress

cache:
  directories:
    - /home/travis/.cargo

before_cache:
  - rm -rf /home/travis/.cargo/registry

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - develop

notifications:
  email:
    on_success: never
    on_failure: always
